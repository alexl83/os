#!/bin/bash

# File: /etc/NetworkManager/dispatcher.d/99-bluetooth-nap

INTERFACE=$1
STATUS=$2
NAP_CONNECTION_ID="NAP"

check_connections() {
    # Check if any Ethernet or Wi-Fi connections are active
    ETHERNET_CONNECTED=$(nmcli -t -f TYPE,STATE connection show --active | grep "802-3-ethernet:activated")
    WIFI_CONNECTED=$(nmcli -t -f TYPE,STATE connection show --active | grep "802-11-wireless:activated")
    if [ -z "$ETHERNET_CONNECTED" ] && [ -z "$WIFI_CONNECTED" ]; then
        return 1
    else
        return 0
    fi
}

bring_up_bluetooth_nap() {
    # Bring up Bluetooth NAP connection
    nmcli connection up id "$NAP_CONNECTION_ID"
}

bring_down_bluetooth_nap() {
    # Bring down Bluetooth NAP connection
    nmcli connection down id "$NAP_CONNECTION_ID"
}

# Function to determine if an interface is a Bluetooth interface by checking for escaped colons or bnep*
is_bluetooth_interface() {
    if [[ "$INTERFACE" == *":"* || "$INTERFACE" == "bnep"* ]]; then
        return 0
    else
        return 1
    fi
}

# Main script logic
case "$STATUS" in

    up)
        # Ignore Bluetooth interfaces
        if is_bluetooth_interface; then
            exit 0
        fi

        # When a connection comes up, check if it's Ethernet or Wi-Fi and disable Bluetooth NAP
        TYPE=$(nmcli -t -f DEVICE,TYPE device status | grep "^$INTERFACE:" | awk -F ':' '{print $2}')
        if [[ "$TYPE" == "ethernet" || "$TYPE" == "wifi" ]]; then
            bring_down_bluetooth_nap
        fi
        ;;

    down)
        # Ignore Bluetooth interfaces
        if is_bluetooth_interface; then
            exit 0
        fi

        # When a connection goes down, check if any Ethernet or Wi-Fi are still up
        check_connections
        if [ $? -ne 0 ]; then
            bring_up_bluetooth_nap
        else
            bring_down_bluetooth_nap
        fi
        ;;

    connectivity-change)
	BT_CONNECTED=$(nmcli -t -f TYPE,STATE connection show --active | grep "bluetooth:activated")
	if is_bluetooth_interface; then
		exit 0
	fi

	if [ ! "${CONNECTIVITY_STATE}" == "FULL" ] && [ -z "${BT_CONNECTED}" ]; then
		bring_up_bluetooth_nap
	fi
	;;

    *)
        ;;
esac
